import React from 'react';
import ReactDOM from 'react-dom/client';
// import { Route, Router, Navigate } from 'react-router';
import { Router, Navigate } from 'react-router';
import {
  BrowserRouter,
  Routes,
  Route
} from "react-router-dom";

import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';
import * as serviceWorker from './serviceWorker';
import { PersistGate } from 'redux-persist/integration/react';
import { Provider } from 'react-redux';
import { persistStore } from 'redux-persist';
import store from "./redux/store";

let persistor = persistStore(store);

const PrivateRoute = ({
  component: Component,
  ...rest }) => {
  let isAuth = true;
  return (
    <Route
      {...rest}
      render={props =>
        isAuth ? (
          <Component {...props} {...rest} />
        ) : (
          <Navigate
            to={{
              pathname: "/",
              state: {
                from: props.location
              }
            }}
          />
        )
      }
    />
  );
};

const onBeforeLift = () => {
}

const routing = (
  <Provider store={store}>
    <PersistGate loading={null} persistor={persistor} onBeforeLift={onBeforeLift} >
      <Router>
        <Route exact path="/" component={App} />
        <Route path="/home" component={App} />
      </Router>
    </PersistGate>
  </Provider>
)

// ReactDOM.render(routing, document.getElementById('root'));
const root = ReactDOM.createRoot(document.getElementById('root'));
// root.render(
//   <BrowserRouter>
//     <Routes>
//       <Route path="/home" component={App} />
//     </Routes>
//   </BrowserRouter>);

root.render(routing);

serviceWorker.unregister();

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();

